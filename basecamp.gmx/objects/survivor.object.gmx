<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>survivorSprite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create survivor() hp, cd, loot, type
job = 0;
workAgain = 180;
loot = false;
cd = 90;
hp = 100;
hunger = 0;
type = "Person";

fighting = 1;
gathering = 1;

foodGrabbed = 0;
medsGrabbed = 0;
weaponsGrabbed = 0;
materialsGrabbed = 0;

image_speed = 0;
var i;
if(instance_exists(survivor)){
    for (i = 0; i &lt; instance_number(survivor); i += 1){
        npc[i] = instance_find(survivor,i);
            if(i &lt;= 6)
                npc[i].image_index = i;
            else
                npc[i].image_index = 0;
    }
}else{
    image_index = 0;
}

makeWork();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set jobs for survivors 

if(speed &lt;= 0 &amp;&amp; status == 1){ // After an event that makes player stop moving
    workAgain--;
    if(workAgain &lt;= 0)
        makeWork();
}

if(status == 2){ // Under Attack
    cd--;
    threat = instance_nearest(x,y,zombie);
    if(instance_exists(threat)){
        if(distance_to_object(threat) &gt; 4)
            move_towards_point(threat.x, threat.y, 1.5);
        else{
            speed = 0;
            if(cd &lt;=0){
                attackZombie(threat, self.fighting);
                weapons--;
            }
        }
    }else{
        status = 1;
    }
}

if(speed &gt; 0){ // Slow down and unload your loot if at camp else keep moving
    if(place_meeting(x,y, baseCamp))
        speed -= 0.0075;
    else
        speed = 1.5;
}

if(status == 1){
    checkWounds();
    if(!loot){
        // cd set on outside of room event
        // Check for Loot
        if(foodGrabbed &gt; 0)
            baseCamp.gatheredArray[0] =  baseCamp.gatheredArray[0] + foodGrabbed;
        if(medsGrabbed &gt; 0)
            baseCamp.gatheredArray[1] =  baseCamp.gatheredArray[1] + medsGrabbed;
        if(weaponsGrabbed &gt; 0)
            baseCamp.gatheredArray[2] =  baseCamp.gatheredArray[2] + weaponsGrabbed;
        if(materialsGrabbed &gt; 0)
            baseCamp.gatheredArray[3] =  baseCamp.gatheredArray[3] + materialsGrabbed;
        if(foodGrabbed &gt; 0 || medsGrabbed &gt; 0 || weaponsGrabbed &gt; 0 || materialsGrabbed &gt; 0)
            loot = true;
    }else{
        // Looted
        cd--;
    }        
}



/*
switch(job){
    case 0:
        // Survivors unassigned will be sent to gather supplies for the base camp.
        //makeWork(self);
        break;
    case 1:
        // Assigneed to fighting training
        // fighting xp ++;
        break;
    case 2:
        // Assigneed to Gathering training
        // gathering xp ++;
        break;
    case 3:
        // Assigneed to Med Center
        // Survivor is injured and needs to heal
        break;
    case 4:
        // Assigneed to base camp maintenance
        // Repairs damaged base camp structures
        break;
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="baseCamp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>unload();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
generateResources(60);
cd = 90;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_text(x-10,y - 40,hp);

if(foodGrabbed &gt; 0 &amp;&amp; cd &gt; 0)
    drawLootNotification("Food");
if(medsGrabbed &gt; 0 &amp;&amp; cd &gt; 0)
    drawLootNotification("Meds");
if(weaponsGrabbed &gt; 0 &amp;&amp; cd &gt; 0)
    drawLootNotification("Weapons");
if(materialsGrabbed &gt; 0 &amp;&amp; cd &gt; 0)
    drawLootNotification("Materials");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
